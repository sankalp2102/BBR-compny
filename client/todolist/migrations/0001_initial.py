# Generated by Django 5.1.4 on 2025-03-20 18:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Machinery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('time_from', models.TextField(max_length=255)),
                ('time_to', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.CharField(choices=[('Day', 'Day'), ('Night', 'Night')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personnel_engaged', models.JSONField(default=list)),
                ('machinery_used', models.JSONField(default=list)),
                ('equipment_used', models.JSONField(default=list)),
                ('personnel_idled', models.JSONField(blank=True, default=list, null=True)),
                ('equipment_idled', models.JSONField(blank=True, default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reconcilation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_no', models.CharField(max_length=255)),
                ('lot_no_date', models.CharField(max_length=255)),
                ('used', models.IntegerField()),
                ('used_date', models.CharField(max_length=255)),
                ('left', models.IntegerField()),
                ('left_date', models.CharField(max_length=255)),
                ('returned', models.IntegerField()),
                ('returned_date', models.CharField(max_length=255)),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.shift')),
            ],
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.shift')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personnel_list', models.JSONField(default=list)),
                ('date', models.DateField()),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.shift')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.site')),
            ],
        ),
        migrations.AddField(
            model_name='shift',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.site'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('CEO', 'CEO'), ('Office', 'Office'), ('Technician', 'Technician')], default='Technician', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions_set', to='auth.permission')),
                ('assigned_sites', models.ManyToManyField(blank=True, to='todolist.site')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='site',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.state'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type_of_work', models.CharField(max_length=255)),
                ('machinery', models.ManyToManyField(related_name='tasks', to='todolist.machinery')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.shift')),
            ],
        ),
        migrations.CreateModel(
            name='ReasonForDelay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('details', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='media/')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('time_reported', models.DateTimeField(auto_now_add=True)),
                ('task_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.taskreport')),
            ],
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Incomplete', 'Incomplete'), ('Partially Complete', 'Partially Complete')], default='Incomplete', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todolist.task')),
            ],
        ),
        migrations.AddField(
            model_name='taskreport',
            name='task_status',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='todolist.taskstatus'),
        ),
    ]
